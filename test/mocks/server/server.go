// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cri-o/cri-o/server (interfaces: ConfigIface)

// Package servermock is a generated GoMock package.
package servermock

import (
	config "github.com/cri-o/cri-o/lib/config"
	server "github.com/cri-o/cri-o/server"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockConfigIface is a mock of ConfigIface interface
type MockConfigIface struct {
	ctrl     *gomock.Controller
	recorder *MockConfigIfaceMockRecorder
}

// MockConfigIfaceMockRecorder is the mock recorder for MockConfigIface
type MockConfigIfaceMockRecorder struct {
	mock *MockConfigIface
}

// NewMockConfigIface creates a new mock instance
func NewMockConfigIface(ctrl *gomock.Controller) *MockConfigIface {
	mock := &MockConfigIface{ctrl: ctrl}
	mock.recorder = &MockConfigIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConfigIface) EXPECT() *MockConfigIfaceMockRecorder {
	return m.recorder
}

// GetData mocks base method
func (m *MockConfigIface) GetData() *server.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetData")
	ret0, _ := ret[0].(*server.Config)
	return ret0
}

// GetData indicates an expected call of GetData
func (mr *MockConfigIfaceMockRecorder) GetData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetData", reflect.TypeOf((*MockConfigIface)(nil).GetData))
}

// GetLibConfigIface mocks base method
func (m *MockConfigIface) GetLibConfigIface() config.Iface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLibConfigIface")
	ret0, _ := ret[0].(config.Iface)
	return ret0
}

// GetLibConfigIface indicates an expected call of GetLibConfigIface
func (mr *MockConfigIfaceMockRecorder) GetLibConfigIface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLibConfigIface", reflect.TypeOf((*MockConfigIface)(nil).GetLibConfigIface))
}
