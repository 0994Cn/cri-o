// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubernetes-sigs/cri-o/lib (interfaces: ConfigIface)

// Package libmock is a generated GoMock package.
package libmock

import (
	storage "github.com/containers/storage"
	gomock "github.com/golang/mock/gomock"
	lib "github.com/kubernetes-sigs/cri-o/lib"
	reflect "reflect"
)

// MockConfigIface is a mock of ConfigIface interface
type MockConfigIface struct {
	ctrl     *gomock.Controller
	recorder *MockConfigIfaceMockRecorder
}

// MockConfigIfaceMockRecorder is the mock recorder for MockConfigIface
type MockConfigIfaceMockRecorder struct {
	mock *MockConfigIface
}

// NewMockConfigIface creates a new mock instance
func NewMockConfigIface(ctrl *gomock.Controller) *MockConfigIface {
	mock := &MockConfigIface{ctrl: ctrl}
	mock.recorder = &MockConfigIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConfigIface) EXPECT() *MockConfigIfaceMockRecorder {
	return m.recorder
}

// GetData mocks base method
func (m *MockConfigIface) GetData() *lib.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetData")
	ret0, _ := ret[0].(*lib.Config)
	return ret0
}

// GetData indicates an expected call of GetData
func (mr *MockConfigIfaceMockRecorder) GetData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetData", reflect.TypeOf((*MockConfigIface)(nil).GetData))
}

// GetStore mocks base method
func (m *MockConfigIface) GetStore() (storage.Store, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStore")
	ret0, _ := ret[0].(storage.Store)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStore indicates an expected call of GetStore
func (mr *MockConfigIfaceMockRecorder) GetStore() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStore", reflect.TypeOf((*MockConfigIface)(nil).GetStore))
}
