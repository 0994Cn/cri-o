---
version: 2.1

stdenv: &stdenv
  environment:
    GOCACHE: &gocache /tmp/go-build
    JOBS: &jobs 4
    WORKDIR_VM: &workdir_vm /home/circleci/go/src/github.com/cri-o/cri-o

executors:
  machine:
    machine:
      image: ubuntu-2004:202010-01
    <<: *stdenv
    working_directory: *workdir_vm

workflows:
  version: 2
  pipeline:
    jobs:
      - integration
      - integration:
          name: integration-critest
          run_critest: '1'
          jobs: 1
          test_args: critest.bats
      - integration:
          name: integration-userns
          test_userns: '1'
      - integration:
          name: integration-cgroupfs
          cgroup_manager: cgroupfs

jobs:
  integration:
    executor: machine
    parameters:
      run_critest:
        type: string
        default: ''
      test_args:
        type: string
        default: ''
      test_userns:
        type: string
        default: ''
      cgroup_manager:
        type: string
        default: 'systemd'
      # default is system.slice, if we want to
      # use cgroupfs, that is an invalid value
      conmon_cgroup:
        type: string
        default: 'pod'
      jobs:
        type: integer
        default: *jobs
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v1-integration-{{ checksum "go.sum" }}
      - run:
          name: setup environment
          command: scripts/circle-setup
      - run:
          name: build
          command: make all test-binaries
          environment:
            GOPATH: /home/circleci/go
      - run:
          name: setup environment
          command: scripts/circle-setup-cgroup_manager
          environment:
            CONTAINER_CGROUP_MANAGER: "<< parameters.cgroup_manager >>"
      - run:
          name: integration test
          command: sudo -E test/test_runner.sh $TEST_ARGS 2>&1 | tee -a /tmp/testout
          no_output_timeout: 30m
          environment:
            JOBS: "<< parameters.jobs >>"
            RUN_CRITEST: "<< parameters.run_critest >>"
            TEST_ARGS: "<< parameters.test_args >>"
            TEST_USERNS: "<< parameters.test_userns >>"
            CONTAINER_CGROUP_MANAGER: "<< parameters.cgroup_manager >>"
            CONTAINER_CONMON_CGROUP: "<< parameters.conmon_cgroup >>"
      - save_cache:
          key: v1-integration-{{ checksum "go.sum" }}
          paths:
            - *gocache
